{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "hi@serokell.io",
      "url": "https://serokell.io",
      "name": "Serokell OÃœ"
    },
    "version": "1.0.0",
    "title": "Tezos Agora API"
  },
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/api/v1/period": {
      "get": {
        "summary": "Info about given voting period",
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "maximum": 18446744073709552000,
            "minimum": 0,
            "required": false,
            "in": "query",
            "name": "num",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PeriodInfo"
            },
            "description": ""
          },
          "400": {
            "description": "Invalid `num`"
          }
        }
      }
    },
    "/api/v1/proposals/{period_num}": {
      "get": {
        "summary": "Proposals for given proposal period.",
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "maximum": 18446744073709552000,
            "minimum": 0,
            "required": true,
            "in": "path",
            "name": "period_num",
            "type": "integer"
          },
          {
            "format": "int32",
            "required": false,
            "in": "query",
            "name": "offset",
            "type": "integer",
            "description": "Pagination parameter. How many items to skip from the beginning."
          },
          {
            "format": "int32",
            "required": false,
            "in": "query",
            "name": "limit",
            "type": "integer",
            "description": "Pagination parameter. Maximum number of items to return."
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Proposal"
              },
              "type": "array"
            },
            "description": ""
          },
          "404": {
            "description": "`period_num` not found"
          }
        }
      }
    },
    "/api/v1/proposal_votes/{period_num}": {
      "get": {
        "summary": "Proposal votes for given proposal period.",
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "maximum": 18446744073709552000,
            "minimum": 0,
            "required": true,
            "in": "path",
            "name": "period_num",
            "type": "integer"
          },
          {
            "format": "int32",
            "required": false,
            "in": "query",
            "name": "offset",
            "type": "integer",
            "description": "Pagination parameter. How many items to skip from the beginning."
          },
          {
            "format": "int32",
            "required": false,
            "in": "query",
            "name": "limit",
            "type": "integer",
            "description": "Pagination parameter. Maximum number of items to return."
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ProposalVote"
              },
              "type": "array"
            },
            "description": ""
          },
          "404": {
            "description": "`period_num` not found"
          }
        }
      }
    },
    "/api/v1/ballots/{period_num}": {
      "get": {
        "summary": "Ballots for given voting period.",
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "maximum": 18446744073709552000,
            "minimum": 0,
            "required": true,
            "in": "path",
            "name": "period_num",
            "type": "integer"
          },
          {
            "format": "int32",
            "required": false,
            "in": "query",
            "name": "offset",
            "type": "integer",
            "description": "Pagination parameter. How many items to skip from the beginning."
          },
          {
            "format": "int32",
            "required": false,
            "in": "query",
            "name": "limit",
            "type": "integer",
            "description": "Pagination parameter. Maximum number of items to return."
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Ballot"
              },
              "type": "array"
            },
            "description": ""
          },
          "404": {
            "description": "`period_num` not found"
          }
        }
      }
    }
  },
  "definitions": {
    "PeriodInfo": {
      "required": [
        "period"
      ],
      "properties": {
        "period": {
          "$ref": "#/definitions/Period"
        },
        "voteStats": {
          "$ref": "#/definitions/VoteStats"
        },
        "proposal": {
          "$ref": "#/definitions/Proposal"
        },
        "ballots": {
          "$ref": "#/definitions/Ballots"
        }
      },
      "type": "object"
    },
    "Period": {
      "required": [
        "num",
        "type",
        "startLevel",
        "cycle"
      ],
      "properties": {
        "num": {
          "maximum": 18446744073709552000,
          "minimum": 0,
          "type": "integer"
        },
        "type": {
          "$ref": "#/definitions/PeriodType"
        },
        "startLevel": {
          "maximum": 18446744073709552000,
          "minimum": 0,
          "type": "integer"
        },
        "cycle": {
          "maximum": 18446744073709552000,
          "minimum": 0,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "PeriodType": {
      "description": "Period type",
      "type": "string",
      "enum": [
        "proposal",
        "exploration",
        "testing",
        "promotion"
      ]
    },
    "VoteStats": {
      "required": [
        "votesCast",
        "votesAvailable"
      ],
      "properties": {
        "votesCast": {
          "maximum": 18446744073709552000,
          "minimum": 0,
          "type": "integer"
        },
        "votesAvailable": {
          "maximum": 18446744073709552000,
          "minimum": 0,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Proposal": {
      "required": [
        "hash",
        "title",
        "description"
      ],
      "properties": {
        "hash": {
          "$ref": "#/definitions/Hash"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Hash": {
      "description": "Base58 hash value",
      "format": "byte",
      "type": "string"
    },
    "Ballots": {
      "required": [
        "yay",
        "nay",
        "pass"
      ],
      "properties": {
        "yay": {
          "maximum": 18446744073709552000,
          "minimum": 0,
          "type": "integer"
        },
        "nay": {
          "maximum": 18446744073709552000,
          "minimum": 0,
          "type": "integer"
        },
        "pass": {
          "maximum": 18446744073709552000,
          "minimum": 0,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ProposalVote": {
      "required": [
        "proposal",
        "author",
        "operation",
        "timestamp"
      ],
      "properties": {
        "proposal": {
          "$ref": "#/definitions/Hash"
        },
        "author": {
          "$ref": "#/definitions/Baker"
        },
        "operation": {
          "$ref": "#/definitions/Hash"
        },
        "timestamp": {
          "$ref": "#/definitions/UTCTime"
        }
      },
      "type": "object"
    },
    "Baker": {
      "required": [
        "pkh",
        "rolls",
        "name"
      ],
      "properties": {
        "pkh": {
          "$ref": "#/definitions/Hash"
        },
        "rolls": {
          "maximum": 18446744073709552000,
          "minimum": 0,
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UTCTime": {
      "example": "2016-07-22T00:00:00Z",
      "format": "yyyy-mm-ddThh:MM:ssZ",
      "type": "string"
    },
    "Ballot": {
      "required": [
        "author",
        "decision",
        "operation",
        "timestamp"
      ],
      "properties": {
        "author": {
          "$ref": "#/definitions/Baker"
        },
        "decision": {
          "$ref": "#/definitions/Decision"
        },
        "operation": {
          "$ref": "#/definitions/Hash"
        },
        "timestamp": {
          "$ref": "#/definitions/UTCTime"
        }
      },
      "type": "object"
    },
    "Decision": {
      "description": "Ballot decision",
      "type": "string",
      "enum": [
        "yay",
        "nay",
        "pass"
      ]
    }
  },
  "externalDocs": {
    "url": "http://swagger.io",
    "description": "Find out more about Swagger"
  }
}
