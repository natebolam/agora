swagger: '2.0'
externalDocs:
  url: http://swagger.io
  description: Find out more about Swagger
schemes:
- http
- https
info:
  contact:
    email: hi@serokell.io
    url: https://serokell.io
    name: Serokell OÃœ
  version: 1.0.0
  title: Tezos Agora API
definitions:
  ProposalVote:
    required:
    - id
    - proposal
    - author
    - timestamp
    type: object
    properties:
      proposalTitle:
        type: string
      proposal:
        $ref: '#/definitions/Hash'
      author:
        $ref: '#/definitions/Hash'
      id:
        $ref: '#/definitions/ProposalVoteId'
      timestamp:
        $ref: '#/definitions/UTCTime'
  Stage:
    maximum: 2147483647
    minimum: -2147483648
    type: integer
    description: Stage number
  StageInfo:
    minProperties: 1
    maxProperties: 1
    type: object
    properties:
      evaluationInfo:
        required:
        - stage
        - totalStages
        - stageTimes
        type: object
        properties:
          stage:
            $ref: '#/definitions/Stage'
          stageTimes:
            items:
              $ref: '#/definitions/StageItemInfo'
            type: array
          totalStages:
            maximum: 4294967295
            minimum: 0
            type: integer
      votingInfo:
        required:
        - stage
        - totalStages
        - stageTimes
        - voteStats
        type: object
        properties:
          stage:
            $ref: '#/definitions/Stage'
          stageTimes:
            items:
              $ref: '#/definitions/StageItemInfo'
            type: array
          totalStages:
            maximum: 4294967295
            minimum: 0
            type: integer
          voteStats:
            $ref: '#/definitions/VoteStats'
          winner:
            $ref: '#/definitions/Proposal'
      implementationInfo:
        required:
        - stage
        - totalStages
        - stageTimes
        - proposal
        type: object
        properties:
          stage:
            $ref: '#/definitions/Stage'
          stageTimes:
            items:
              $ref: '#/definitions/StageItemInfo'
            type: array
          totalStages:
            maximum: 4294967295
            minimum: 0
            type: integer
          proposal:
            $ref: '#/definitions/Proposal'
      proposalInfo:
        required:
        - stage
        - totalStages
        - stageTimes
        type: object
        properties:
          stage:
            $ref: '#/definitions/Stage'
          stageTimes:
            items:
              $ref: '#/definitions/StageItemInfo'
            type: array
          totalStages:
            maximum: 4294967295
            minimum: 0
            type: integer
  Hash:
    format: byte
    type: string
    description: Base58 hash value
  Votes:
    maximum: 2147483647
    minimum: -2147483648
    type: integer
    description: Number of votes
  ProposalId:
    maximum: 2147483647
    minimum: -2147483648
    type: integer
    description: Proposal id
  Proposal:
    required:
    - id
    - stage
    - hash
    - timeCreated
    - votesCasted
    type: object
    properties:
      stage:
        $ref: '#/definitions/Stage'
      longDescription:
        type: string
      votesCasted:
        $ref: '#/definitions/Votes'
      hash:
        $ref: '#/definitions/Hash'
      shortDescription:
        type: string
      proposalFile:
        type: string
      timeCreated:
        $ref: '#/definitions/UTCTime'
      id:
        $ref: '#/definitions/ProposalId'
      title:
        type: string
      discourseLink:
        type: string
  StageType:
    enum:
    - proposal
    - testing_vote
    - voting_for_vote
    - implementation
    description: Period type
  StageItemInfo:
    required:
    - stage
    - stageType
    type: object
    properties:
      stage:
        $ref: '#/definitions/Stage'
      stageType:
        $ref: '#/definitions/StageType'
  UTCTime:
    example: 2016-07-22T00:00:00Z
    format: yyyy-mm-ddThh:MM:ssZ
    type: string
  Voters:
    maximum: 2147483647
    minimum: -2147483648
    type: integer
    description: Number of voters
  ProposalVoteId:
    maximum: 2147483647
    minimum: -2147483648
    type: integer
    description: Proposal vote id
  VoteStats:
    required:
    - numVoters
    - numVotersTotal
    type: object
    properties:
      numVoters:
        $ref: '#/definitions/Voters'
      numVotersTotal:
        $ref: '#/definitions/Voters'
paths:
  /api/v1/proposals/{stage_id}:
    get:
      summary: Proposals for given proposal stage.
      responses:
        '404':
          description: '`stage_id` not found'
        '200':
          schema:
            items:
              $ref: '#/definitions/Proposal'
            type: array
          description: ''
      produces:
      - application/json;charset=utf-8
      parameters:
      - maximum: 2147483647
        format: int32
        minimum: -2147483648
        required: true
        in: path
        name: stage_id
        type: integer
  /api/v1/stage:
    get:
      summary: Info about given voting stage
      responses:
        '400':
          description: Invalid `id`
        '200':
          schema:
            $ref: '#/definitions/StageInfo'
          description: ''
      produces:
      - application/json;charset=utf-8
      parameters:
      - maximum: 2147483647
        format: int32
        minimum: -2147483648
        required: false
        in: query
        name: id
        type: integer
  /api/v1/proposal/{proposal_id}/stage/{stage_id}:
    get:
      summary: Info about specific proposal
      responses:
        '404':
          description: '`proposal_id` or `stage_id` not found'
        '200':
          schema:
            $ref: '#/definitions/Proposal'
          description: ''
      produces:
      - application/json;charset=utf-8
      parameters:
      - maximum: 9223372036854775807
        minimum: -9223372036854775808
        required: true
        in: path
        name: proposal_id
        type: integer
      - maximum: 2147483647
        format: int32
        minimum: -2147483648
        required: true
        in: path
        name: stage_id
        type: integer
  /api/v1/proposal/{proposal_id}/stage/{stage_id}/votes:
    get:
      summary: Proposal votes issued for a given proposal
      responses:
        '404':
          description: '`proposal_id` or `stage_id` not found'
        '200':
          schema:
            items:
              $ref: '#/definitions/ProposalVote'
            type: array
          description: ''
      produces:
      - application/json;charset=utf-8
      parameters:
      - maximum: 9223372036854775807
        minimum: -9223372036854775808
        required: true
        in: path
        name: proposal_id
        type: integer
      - maximum: 2147483647
        format: int32
        minimum: -2147483648
        required: true
        in: path
        name: stage_id
        type: integer
